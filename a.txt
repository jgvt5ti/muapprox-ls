((Hflz.Exists ({ Id.name = "ls"; id = 4; ty = Type.TyList },
    (Hflz.Forall ({ Id.name = "sssss87"; id = 87; ty = Type.TyInt },
       (Hflz.Or (
          (Hflz.Or (
             (Hflz.Pred (Formula.Lt,
                [(Arith.Var { Id.name = "sssss87"; id = 87; ty = `Int });
                  (Arith.Op (Arith.Add,
                     [(Arith.Op (Arith.Mult,
                         [(Arith.Int 1);
                           (Arith.Size
                              (Arith.LVar
                                 { Id.name = "ls"; id = 4; ty = `List }))
                           ]
                         ));
                       (Arith.Int 1)]
                     ))
                  ],
                [])),
             (Hflz.Pred (Formula.Lt,
                [(Arith.Var { Id.name = "sssss87"; id = 87; ty = `Int });
                  (Arith.Int 1)],
                []))
             )),
          (Hflz.App (
             (Hflz.App (
                (Hflz.App ((Hflz.Var { Id.name = "G"; id = 3; ty =  }),
                   (Hflz.Arith
                      (Arith.Var { Id.name = "sssss87"; id = 87; ty = `Int }))
                   )),
                (Hflz.LsExpr
                   (Arith.LVar { Id.name = "ls"; id = 4; ty = `List }))
                )),
             (Hflz.Var { Id.name = "A"; id = 2; ty =  })))
          ))
       ))
    )),
 [{ Hflz.var = { Id.name = "A"; id = 2; ty =  };
    body =
    (Hflz.Abs ({ Id.name = "n"; id = 5; ty = Type.TyInt }, (Hflz.Bool false)
       ));
    fix = Fixpoint.Least };
   { Hflz.var = { Id.name = "G"; id = 3; ty =  };
     body =
     (Hflz.Abs ({ Id.name = "ttttt88"; id = 88; ty = Type.TyInt },
        (Hflz.Abs ({ Id.name = "ls"; id = 6; ty = Type.TyList },
           (Hflz.Abs ({ Id.name = "k"; id = 7; ty = (Type.TySigma ) },
              (Hflz.Exists ({ Id.name = "hd"; id = 8; ty = Type.TyInt },
                 (Hflz.Exists ({ Id.name = "tl"; id = 9; ty = Type.TyList },
                    (Hflz.Or (
                       (Hflz.And (
                          (Hflz.Pred (Formula.Eql, [],
                             [(Arith.LVar
                                 { Id.name = "ls"; id = 6; ty = `List });
                               Arith.Nil]
                             )),
                          (Hflz.App (
                             (Hflz.Var { Id.name = "k"; id = 7; ty =  }),
                             (Hflz.Arith (Arith.Int 0))))
                          )),
                       (Hflz.And (
                          (Hflz.Pred (Formula.Eql, [],
                             [(Arith.LVar
                                 { Id.name = "ls"; id = 6; ty = `List });
                               (Arith.Cons (
                                  (Arith.Var
                                     { Id.name = "hd"; id = 8; ty = `Int }),
                                  (Arith.LVar
                                     { Id.name = "tl"; id = 9; ty = `List })
                                  ))
                               ]
                             )),
                          (Hflz.Or (
                             (Hflz.And (
                                (Hflz.Pred (Formula.Eq,
                                   [(Arith.Var
                                       { Id.name = "hd"; id = 8; ty = `Int });
                                     (Arith.Int 0)],
                                   [])),
                                (Hflz.Forall (
                                   { Id.name = "sssss89"; id = 89;
                                     ty = Type.TyInt },
                                   (Hflz.Or (
                                      (Hflz.Or (
                                         (Hflz.Pred (Formula.Lt,
                                            [(Arith.Var
                                                { Id.name = "sssss89";
                                                  id = 89; ty = `Int });
                                              (Arith.Op (Arith.Add,
                                                 [(Arith.Op (Arith.Mult,
                                                     [(Arith.Int 1);
                                                       (Arith.Size
                                                          (Arith.LVar
                                                             { Id.name = "tl";
                                                               id = 9;
                                                               ty = `List }))
                                                       ]
                                                     ));
                                                   (Arith.Int 1)]
                                                 ))
                                              ],
                                            [])),
                                         (Hflz.Pred (Formula.Lt,
                                            [(Arith.Var
                                                { Id.name = "sssss89";
                                                  id = 89; ty = `Int });
                                              (Arith.Int 1)],
                                            []))
                                         )),
                                      (Hflz.App (
                                         (Hflz.App (
                                            (Hflz.App (
                                               (Hflz.Var
                                                  { Id.name = "G"; id = 3;
                                                    ty =  }),
                                               (Hflz.Arith
                                                  (Arith.Var
                                                     { Id.name = "sssss89";
                                                       id = 89; ty = `Int }))
                                               )),
                                            (Hflz.LsExpr
                                               (Arith.LVar
                                                  { Id.name = "tl"; id = 9;
                                                    ty = `List }))
                                            )),
                                         (Hflz.Var
                                            { Id.name = "A"; id = 2; ty =  })
                                         ))
                                      ))
                                   ))
                                )),
                             (Hflz.And (
                                (Hflz.Pred (Formula.Eq,
                                   [(Arith.Var
                                       { Id.name = "hd"; id = 8; ty = `Int });
                                     (Arith.Int 1)],
                                   [])),
                                (Hflz.Forall (
                                   { Id.name = "sssss90"; id = 90;
                                     ty = Type.TyInt },
                                   (Hflz.Or (
                                      (Hflz.Or (
                                         (Hflz.Pred (Formula.Lt,
                                            [(Arith.Var
                                                { Id.name = "sssss90";
                                                  id = 90; ty = `Int });
                                              (Arith.Op (Arith.Add,
                                                 [(Arith.Op (Arith.Mult,
                                                     [(Arith.Int 1);
                                                       (Arith.Size
                                                          (Arith.Cons (
                                                             (Arith.Int 0),
                                                             (Arith.LVar
                                                                { Id.name =
                                                                  "tl";
                                                                  id = 9;
                                                                  ty = `List
                                                                  })
                                                             )))
                                                       ]
                                                     ));
                                                   (Arith.Int 1)]
                                                 ))
                                              ],
                                            [])),
                                         (Hflz.Pred (Formula.Lt,
                                            [(Arith.Var
                                                { Id.name = "sssss90";
                                                  id = 90; ty = `Int });
                                              (Arith.Int 1)],
                                            []))
                                         )),
                                      (Hflz.App (
                                         (Hflz.App (
                                            (Hflz.App (
                                               (Hflz.Var
                                                  { Id.name = "G"; id = 3;
                                                    ty =  }),
                                               (Hflz.Arith
                                                  (Arith.Var
                                                     { Id.name = "sssss90";
                                                       id = 90; ty = `Int }))
                                               )),
                                            (Hflz.LsExpr
                                               (Arith.Cons ((Arith.Int 0),
                                                  (Arith.LVar
                                                     { Id.name = "tl";
                                                       id = 9; ty = `List })
                                                  )))
                                            )),
                                         (Hflz.Var
                                            { Id.name = "A"; id = 2; ty =  })
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           ))
        ));
     fix = Fixpoint.Greatest }
   ])
